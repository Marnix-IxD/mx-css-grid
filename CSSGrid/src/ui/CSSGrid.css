/**
 * CSS Grid Widget Styles - Minimal Approach
 * 
 * Only essential styles, letting inline styles and user classes
 * handle the majority of the styling needs
 */

/* CSS Custom Properties for theming */
:root {
    --mx-grid-focus-color: #0066cc;
    --mx-grid-focus-width: 2px;
    --mx-grid-focus-offset: 2px;
    --mx-grid-animation-duration: 0.3s;
    --mx-grid-animation-easing: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Base grid container */
.mx-css-grid {
    box-sizing: border-box;
    width: 100%;
    position: relative;
    contain: layout style;
    
    /* Grid-specific custom properties with inherit defaults */
    --mx-grid-item-font-size: inherit;
    --mx-grid-item-line-height: inherit;
    --mx-grid-item-color: inherit;
    --mx-grid-item-padding: 0;
    --mx-grid-item-margin: 0;
}

/* Grid item base styles */
.mx-grid-item {
    box-sizing: border-box;
    min-width: 0; /* Prevent grid blowout */
    min-height: 0; /* Prevent grid blowout */
    position: relative;
    contain: layout style;
    
    /* Apply custom properties */
    font-size: var(--mx-grid-item-font-size);
    line-height: var(--mx-grid-item-line-height);
    color: var(--mx-grid-item-color);
    padding: var(--mx-grid-item-padding);
    margin: var(--mx-grid-item-margin);
}

/* Placeholder for virtualized items */
.mx-grid-item--placeholder {
    visibility: hidden;
    pointer-events: none;
}

/* Current breakpoint indicators - used by responsive CSS */
.mx-grid-xs { --breakpoint: xs; }
.mx-grid-sm { --breakpoint: sm; }
.mx-grid-md { --breakpoint: md; }
.mx-grid-lg { --breakpoint: lg; }
.mx-grid-xl { --breakpoint: xl; }
.mx-grid-xxl { --breakpoint: xxl; }

/* Focus styles with visible focus indicator */
.mx-css-grid:focus-visible {
    outline: var(--mx-grid-focus-width) solid var(--mx-grid-focus-color);
    outline-offset: var(--mx-grid-focus-offset);
    box-shadow: 0 0 0 4px rgba(0, 102, 204, 0.1);
}

/* Ensure proper sizing for Mendix widgets */
.mx-grid-item > .mx-widget,
.mx-grid-item > .mx-container,
.mx-grid-item > .mx-container-nested,
.mx-grid-item > .mx-layoutgrid,
.mx-grid-item > .mx-dataview,
.mx-grid-item > .mx-listview,
.mx-grid-item > .mx-scrollcontainer,
.mx-grid-item > .mx-groupbox {
    width: 100%;
    height: 100%;
}

/* Text content handling */
.mx-grid-item > .mx-text,
.mx-grid-item > .mx-label {
    max-width: 100%;
    overflow-wrap: break-word;
    word-wrap: break-word;
    hyphens: auto;
}

/* Performance optimizations for virtualized grids */
.mx-css-grid[data-virtualized="true"] {
    will-change: contents;
    contain: strict;
}

/* Loading state */
.mx-css-grid.loading {
    position: relative;
    pointer-events: none;
    opacity: 0.6;
}

.mx-css-grid.loading::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border: 3px solid rgba(0, 0, 0, 0.1);
    border-top-color: var(--mx-grid-focus-color);
    border-radius: 50%;
    animation: mx-css-grid-spin 0.8s linear infinite;
}

@keyframes mx-css-grid-spin {
    to { transform: translate(-50%, -50%) rotate(360deg); }
}

/* Container queries for component-level responsiveness */
@supports (container-type: inline-size) {
    .mx-css-grid {
        container-type: inline-size;
        container-name: grid;
    }
    
    /* 
     * Container query responsive overrides
     * These only change the CSS custom properties, allowing easy overrides
     */
    @container grid (max-width: 480px) {
        .mx-css-grid {
            --mx-grid-item-font-size-xs: var(--mx-grid-item-font-size);
        }
    }
    
    @container grid (min-width: 481px) and (max-width: 768px) {
        .mx-css-grid {
            --mx-grid-item-font-size-sm: var(--mx-grid-item-font-size);
        }
    }
    
    @container grid (min-width: 769px) and (max-width: 1024px) {
        .mx-css-grid {
            --mx-grid-item-font-size-md: var(--mx-grid-item-font-size);
        }
    }
    
    @container grid (min-width: 1025px) {
        .mx-css-grid {
            --mx-grid-item-font-size-lg: var(--mx-grid-item-font-size);
        }
    }
}

/* Accessibility improvements */
.mx-css-grid[role="grid"] .mx-grid-item:focus {
    outline: var(--mx-grid-focus-width) solid var(--mx-grid-focus-color);
    outline-offset: calc(var(--mx-grid-focus-offset) * -1);
    z-index: 1;
}

/* Skip links for large grids */
.mx-css-grid-skip-link {
    position: absolute;
    top: -40px;
    left: 0;
    background: var(--mx-grid-focus-color);
    color: white;
    padding: 8px;
    text-decoration: none;
    border-radius: 0 0 4px 0;
    transform: translateY(0);
    transition: transform 0.2s;
}

.mx-css-grid-skip-link:focus {
    transform: translateY(40px);
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .mx-css-grid {
        border: 1px solid;
    }
    
    .mx-css-grid:focus-visible {
        outline-width: 3px;
    }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    .mx-css-grid,
    .mx-grid-item {
        transition: none !important;
        animation: none !important;
    }
    
    .mx-css-grid.loading::after {
        animation-duration: 2s;
    }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
    .mx-css-grid.loading::after {
        border-color: rgba(255, 255, 255, 0.1);
        border-top-color: var(--mx-grid-focus-color);
    }
}

/* Print styles */
@media print {
    .mx-css-grid {
        break-inside: avoid;
        page-break-inside: avoid;
    }
    
    .mx-grid-item {
        break-inside: avoid;
        page-break-inside: avoid;
    }
    
    /* Remove loading states */
    .mx-css-grid.loading {
        opacity: 1 !important;
    }
    
    .mx-css-grid.loading::after {
        display: none !important;
    }
    
    /* Ensure focus indicators don't print */
    .mx-css-grid:focus,
    .mx-grid-item:focus {
        outline: none !important;
        box-shadow: none !important;
    }
}

/* Utility: Full-width grid breaking out of container */
.mx-css-grid.full-width {
    width: 100vw;
    margin-left: calc(50% - 50vw);
}

/* Z-index management */
.mx-grid-item[style*="z-index"] {
    position: relative;
}

/* Ensure proper stacking context */
.mx-css-grid {
    isolation: isolate;
}

/* Error states */
.mx-css-grid.error {
    border: 2px solid #dc2626;
    background-color: #fef2f2;
}

.mx-css-grid.error::before {
    content: "Grid configuration error";
    display: block;
    padding: 8px;
    background-color: #dc2626;
    color: white;
    font-size: 12px;
    font-weight: bold;
}